import{i as f,a as l}from"./assets/vendor-eIIf_ydY.js";(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))i(n);new MutationObserver(n=>{for(const s of n)if(s.type==="childList")for(const y of s.addedNodes)y.tagName==="LINK"&&y.rel==="modulepreload"&&i(y)}).observe(document,{childList:!0,subtree:!0});function o(n){const s={};return n.integrity&&(s.integrity=n.integrity),n.referrerPolicy&&(s.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?s.credentials="include":n.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function i(n){if(n.ep)return;n.ep=!0;const s=o(n);fetch(n.href,s)}})();const a=e=>{f.error({iconUrl:"./img/bi_x-octagon.svg",position:"topRight",progressBarColor:"#B51B1B",message:e,messageColor:"#FAFAFB",backgroundColor:"#EF4040"})},g=e=>{f.error({iconUrl:"/img/bi_check2-circle.svg",position:"topRight",progressBarColor:"#326101",message:e,messageColor:"#FAFAFB",backgroundColor:"#59A10D"})},w=e=>{f.error({iconUrl:"./img/bi_exclamation-triangle.svg",position:"topRight",progressBarColor:"#BB7B10",message:e,messageColor:"#FAFAFB",backgroundColor:"#FFA000"})},r={form:document.querySelector(".form"),headerBtns:document.querySelector(".header-btns"),modalOverlay:document.querySelector(".modal-overlay"),modalForm:document.querySelector(".modal-form"),list:document.querySelector(".nodes-list"),loader:document.querySelector(".loader")},d=()=>{r.loader.classList.add("is-loading")},m=()=>{r.loader.classList.remove("is-loading")};l.defaults.baseURL="https://67d5879cd2c7857431f0aed3.mockapi.io/nodes/";const v=async()=>{try{return(await l.get("")).data}catch(e){throw console.log("Something went wrong with downloading nodes!"),e}},F=async e=>{try{return(await l.post("",e)).data}catch(t){throw console.log("Something went wrong with adding node!"),t}},N=async e=>{try{return(await l.get("",{params:{title:e}})).data}catch(t){throw console.log("Something went wrong with searching nodes!"),t}},L=async e=>{try{const t=await l.delete(`${e}`);return console.log(`Deleted node ${e}`),t.data}catch(t){throw console.log("Something went wrong with deleting node!"),t}},k=async(e,t)=>{try{return await l.put(`${t}`,e)}catch(o){throw console.log("Something went wrong with replacing nodes values!"),o}},S=({id:e,title:t,description:o})=>`
    <li class="nodes-item" data-id="${e}">
          <h3 class="nodes-item-title">${t}</h3>
          <p class="nodes-item-description">${o}</p>
          <div class="nodes-item-btns">
            <button class="edit-node-btn" type="button" id="editNodeBtn">Edit</button>
            <button class="delete-node-btn" type="button" id="deleteNodeBtn">Delete</button>
          </div>
        </li>
    `,b=e=>{const t=e.map(o=>S(o)).join("");r.list.innerHTML=t},u=async()=>{const e=await v();b(e)},E=async e=>{e.preventDefault();const t=e.target.elements.nodeInput.value.trim(),o=e.target.elements.nodeTextarea.value.trim();if(!t||!o){w("Fill all fields");return}const i={title:t,description:o};try{d(),await F(i),await u(),g("Added new node!")}catch{a("Error adding note")}finally{c(),m(),r.modalForm.removeEventListener("submit",E),document.removeEventListener("keydown",p),r.modalOverlay.removeEventListener("click",h),e.target.reset()}},h=e=>{e.target===e.currentTarget&&c(),e.target.matches("#modalCloseBtn")&&c()},p=e=>{e.key==="Escape"&&c()},c=()=>{r.modalOverlay.classList.remove("is-open")},C=async()=>{try{d();const e=await v();if(!e){a("Nothing to delete");return}const t=await Promise.allSettled(e.map(({id:o})=>L(o)));console.log(t),await u()}catch{a("Something went wrong with deleting all Nodes!")}finally{m()}},O=async e=>{e.preventDefault();const t=e.target.elements.searchNode.value.trim();if(!t){w("Fill field");return}try{d();const o=await N(t);if(!o||!o.length){a("There is no such note matching your request.");return}b(o),g("Search is successful")}catch{a("Error with searching node!")}finally{m(),r.form.reset()}},B=async e=>{e.preventDefault();const t=e.target.elements.nodeInput.value.trim(),o=e.target.elements.nodeTextarea.value.trim(),i=e.target.dataset.id;if(!t||!o){w("Fill all fields");return}const n={title:t,description:o};try{d(),await k(n,i),await u(),g("Note content changed!")}catch{a("Error with changing note content!")}finally{c(),m(),r.modalForm.removeEventListener("submit",B),document.removeEventListener("keydown",p),r.modalOverlay.removeEventListener("click",h),e.target.reset()}},A=async({target:e})=>{if(e.matches("#deleteNodeBtn"))try{d();const t=e.closest("li").dataset.id;await L(t),await u(),g("Node Successfully deleted!")}catch{a("Something went wrong with deleting node")}finally{m()}if(e.matches("#editNodeBtn")){const t=e.closest("li"),o=t.dataset.id;r.modalForm.dataset.id=o,console.log(t),r.modalOverlay.classList.add("is-open"),r.modalForm.addEventListener("submit",B),document.addEventListener("keydown",p),r.modalOverlay.addEventListener("click",h)}},M=({target:e})=>{e.matches("#deleteAllNodeBtn")&&C(),e.matches("#addNodeBtn")&&(r.modalOverlay.classList.add("is-open"),r.modalForm.addEventListener("submit",E),document.addEventListener("keydown",p),r.modalOverlay.addEventListener("click",h))};r.headerBtns.addEventListener("click",M);r.form.addEventListener("submit",O);r.list.addEventListener("click",A);u();
//# sourceMappingURL=index.js.map
